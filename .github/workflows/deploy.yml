name: Build and Deploy MkDocs

on:
  push:
    branches:
      - main  # 或者你的主分支名称

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build MkDocs
      run: mkdocs build

    - name: Debug SSH
      run: |
        # 1) 查看当前已加载的 SSH key 列表
        ssh-add -l || echo "No SSH key loaded"

        # 2) 测试与服务器的 SSH 连接，输出详细 debug 日志
        #    '-o StrictHostKeyChecking=no' 可以临时忽略 known_hosts，或你也可以保留 ssh-keyscan
        ssh -vvv -o StrictHostKeyChecking=no -p ${{ secrets.SERVER_PORT || '22' }} \
          ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} exit

        # 3) 如果上面的命令也失败，就能在日志里看到更详细的调试信息

    - name: List SSH folder
      run: |
        echo "==> Listing ~/.ssh directory..."
        ls -la ~/.ssh || echo "~/.ssh not found"

        # 如果你在其他步骤里手动写入了 id_rsa，也可检查其权限: 
        # stat ~/.ssh/id_rsa || true

    - name: Deploy to server
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -p ${{ secrets.SERVER_PORT || '22' }} ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
        rsync -e 'ssh -p ${{ secrets.SERVER_PORT || "22" }}' -avz --delete site/ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/www/wwwroot/wiki/